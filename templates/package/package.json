{
  // Set this to an appropriate name
  "name": "@pcd/template-package",
  // Delete this line for packages you intend to publish:
  "private": true,
  "version": "0.0.0",
  "license": "GPL-3.0-or-later",
  // Indicates CommonJS module
  "main": "./dist/cjs/src/index.js",
  // Indicates ESM module
  "module": "./dist/esm/src/index.js",
  "types": "./dist/types/src/index.d.ts",
  // Same exports as listed above:
  "exports": {
    ".": {
      "types": "./dist/types/src/index.d.ts",
      "import": "./dist/esm/src/index.js",
      "require": "./dist/cjs/src/index.js"
    }
  },
  "files": [
    "dist",
    "./README.md",
    "./LICENSE"
  ],
  "scripts": {
    "lint": "eslint \"**/*.ts{,x}\"",
    // Build both CJS and ESM variants
    "build": "tsc -b tsconfig.cjs.json tsconfig.esm.json",
    "typecheck": "yarn tsc --noEmit",
    "prepublishOnly": "yarn clean && yarn build",
    "test": "ts-mocha --config ../../../.mocharc.js --exit test/**/*.spec.ts",
    // Delete build artifacts, installed/linked modules,
    // and TypeScript incremental build data.
    // TypeScript uses the last-modified date on tsbuildinfo files, and
    // compares it to the last-modified date on source files. If you somehow
    // delete the build artifacts in `dist` but don't update the source files,
    // `tsc` will think that there is nothing to do and won't rebuild them, so
    // when cleaning out a package it's necessary to delete these files.
    "clean": "rm -rf dist node_modules *.tsbuildinfo"
  },
  "dependencies": {},
  // These devDependencies are needed by almost all packages:
  "devDependencies": {
    "@pcd/eslint-config-custom": "*",
    "@pcd/tsconfig": "*",
    "@types/mocha": "^10.0.1",
    "eslint": "^7.32.0",
    "mocha": "^10.2.0",
    "ts-mocha": "^10.0.0",
    // The TypeScript version is probably overridden by the `resolutions`
    // setting in the root package.json, but should be kept in sync with it to
    // avoid confusion.
    "typescript": "^5.3.3"
  },
  "publishConfig": {
    "access": "public"
  }
}
